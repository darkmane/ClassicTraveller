<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>ClassicTraveller</groupId>
    <artifactId>ClassicTraveller</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>
    <properties>
        <project.sourceVersion>1.8</project.sourceVersion>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jettyVersion>7.2.0.v20101020</jettyVersion>
        <jerseyVersion>2.6</jerseyVersion>
        <jacksonVersion>2.1.3</jacksonVersion>
        <es.version>1.4.2</es.version>
        <slf4j.version>1.7.7</slf4j.version>
        <lombok.version>1.14.8</lombok.version>
        <apache.commons.version>3.3.2</apache.commons.version>
        <guava.version>18.0</guava.version>
        <testng.version>6.8.8</testng.version>
        <snake.yaml.version>1.15-SNAPSHOT</snake.yaml.version>
        <ebean.version>2.8.1</ebean.version>
        <mysql.connector.version>5.1.37</mysql.connector.version>
        <ebean.orm.version>6.15.2</ebean.orm.version>
    </properties>

    <build>
        <sourceDirectory>${basedir}/src/main/java</sourceDirectory>
        <testSourceDirectory>${basedir}/src/test/java</testSourceDirectory>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <includes>
                        <include>**/*.java</include>
                    </includes>
                    <source>${project.sourceVersion}</source>
                    <target>${project.sourceVersion}</target>
                    <testIncludes>
                        <testInclude>**/*.java</testInclude>
                    </testIncludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                    <includes>
                        <include>test/java/**/*.java</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <!-- This plugin is needed for the servlet example -->
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jettyVersion}</version>
                <configuration>
                    <connectors>
                        <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                            <port>8080</port>
                        </connector>
                    </connectors>
                    <scanIntervalSeconds>10</scanIntervalSeconds>
                    <stopKey>stop</stopKey>
                    <stopPort>8089</stopPort>
                    <systemProperties>
                        <systemProperty>
                            <name>custom.logpath</name>
                            <value>${project.build.directory}</value>
                        </systemProperty>
                        <systemProperty>
                            <name>MERCHANTDATA_ENV</name>
                            <value>staging</value>
                        </systemProperty>
                        <systemProperty>
                            <name>log4j.configuration</name>
                            <value>log4j-jetty.properties</value>
                        </systemProperty>
                    </systemProperties>
                    <webApp>
                        <contextPath>/</contextPath>
                        <!-- extraClasspath - Comma or semicolon separated path of filenames
                            or URLs pointing to directories or jar files. Directories should end with '/' -->
                        <extraClasspath>${project.build.outputDirectory};</extraClasspath>
                    </webApp>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.flywaydb</groupId>
                    <artifactId>flyway-maven-plugin</artifactId>
                    <version>3.2.1</version>
                    <configuration>
                        <url>jdbc:mysql://192.168.99.100/traveller</url>
                        <user>root</user>
                        <password>traveller_root</password>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>com.h2database</groupId>
                            <artifactId>h2</artifactId>
                            <version>1.3.170</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.avaje.ebeanorm</groupId>
                    <artifactId>avaje-ebeanorm-mavenenhancer</artifactId>
                    <version>4.8.1</version>
                    <executions>
                        <execution>
                            <id>main</id>
                            <phase>process-classes</phase>
                            <goals>
                                <goal>enhance</goal>
                            </goals>
                            <configuration>
                                <packages>com.ffe.**</packages>
                                <transformArgs>debug=1</transformArgs>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <repositories>
        <repository>
            <id>Codehaus Snapshots</id>
            <url>http://repository.codehaus.org/</url>
        </repository>
        <repository>
            <id>Sonatype-snapshot</id>
            <name>Sonatype Snapshot repository</name>
            <url>
                https://oss.sonatype.org/content/repositories/snapshots/
            </url>
        </repository>
        <repository>
            <id>Sonatype-public</id>
            <name>Sonatype public repository</name>
            <url>http://oss.sonatype.org/content/groups/public/</url>
        </repository>
        <repository>
            <id>maven2-repository.java.net</id>
            <name>Java.net Repository for Maven</name>
            <url>http://download.java.net/maven/2/</url>

        </repository>
        <repository>
            <id>snapshot-repository.java.net</id>
            <name>Java.net Snapshot Repository for Maven</name>
            <url>https://maven.java.net/content/repositories/snapshots/</url>

        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>plugin-repository</id>
            <name>Codehaus Repository</name>
            <url>https://nexus.codehaus.org/content/repositories/releases/org/codehaus/mojo/</url>
            <layout>default</layout>
        </pluginRepository>
    </pluginRepositories>
    <dependencies>
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>${snake.yaml.version}</version>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <version>${jerseyVersion}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jerseyVersion}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jettyVersion}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jerseyVersion}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>jersey-bean-validation</artifactId>
            <version>${jerseyVersion}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jacksonVersion}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
            <version>${jacksonVersion}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
            <version>${jettyVersion}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${apache.commons.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.connector.version}</version>
        </dependency>

        <dependency>
            <groupId>org.avaje.ebeanorm</groupId>
            <artifactId>avaje-ebeanorm</artifactId>
            <version>${ebean.orm.version}</version>
        </dependency>
        <dependency>
            <groupId>org.avaje</groupId>
            <artifactId>avaje-agentloader</artifactId>
            <version>2.1.2</version>
        </dependency>
        <dependency>
            <groupId>org.avaje.ebeanorm</groupId>
            <artifactId>avaje-ebeanorm-agent</artifactId>
            <version>4.8.1</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>
    </dependencies>
</project>
